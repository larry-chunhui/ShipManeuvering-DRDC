/*--------------------------------*- C++ -*----------------------------------*\ 
| =========                 |                                                 | 
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           | 
|  \\    /   O peration     | Version:  3.0.x                                 | 
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      | 
|    \\/     M anipulation  |                                                 | 
\*---------------------------------------------------------------------------*/ 
FoamFile                                                                        
{                                                                               
    version     2.0;                                                            
    format      ascii;                                                          
    class       dictionary;                                                     
    object      blockMeshDict;                                                  
}                                                                               
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * // 

convertToMeters 1.000000; 

// nx1= 5, nz=20
vertices 
( 
    (1.000000 0.000000 -8.000000)
    (3.000000 0.000000 -8.000000)
    (40.000000 0.000000 -8.000000)
    (40.000000 2.121320 -8.000000)
    (2.121320 2.121320 -8.000000)
    (0.707107 0.707107 -8.000000)
    (40.000000 20.000000 -8.000000)
    (2.121320 20.000000 -8.000000)
    (0.000000 20.000000 -8.000000)
    (0.000000 3.000000 -8.000000)
    (0.000000 1.000000 -8.000000)
    (-1.000000 0.000000 -8.000000)
    (-3.000000 0.000000 -8.000000)
    (-20.000000 0.000000 -8.000000)
    (-20.000000 2.121320 -8.000000)
    (-2.121320 2.121320 -8.000000)
    (-0.707107 0.707107 -8.000000)
    (-20.000000 20.000000 -8.000000)
    (-2.121320 20.000000 -8.000000)
    (1.000000 0.000000 4.000000)
    (3.000000 0.000000 4.000000)
    (40.000000 0.000000 4.000000)
    (40.000000 2.121320 4.000000)
    (2.121320 2.121320 4.000000)
    (0.707107 0.707107 4.000000)
    (40.000000 20.000000 4.000000)
    (2.121320 20.000000 4.000000)
    (0.000000 20.000000 4.000000)
    (0.000000 3.000000 4.000000)
    (0.000000 1.000000 4.000000)
    (-1.000000 0.000000 4.000000)
    (-3.000000 0.000000 4.000000)
    (-20.000000 0.000000 4.000000)
    (-20.000000 2.121320 4.000000)
    (-2.121320 2.121320 4.000000)
    (-0.707107 0.707107 4.000000)
    (-20.000000 20.000000 4.000000)
    (-2.121320 20.000000 4.000000)
    (40.000000 -2.121320 -8.000000)
    (2.121320 -2.121320 -8.000000)
    (0.707107 -0.707107 -8.000000)
    (40.000000 -20.000000 -8.000000)
    (2.121320 -20.000000 -8.000000)
    (0.000000 -20.000000 -8.000000)
    (0.000000 -3.000000 -8.000000)
    (0.000000 -1.000000 -8.000000)
    (-20.000000 -2.121320 -8.000000)
    (-2.121320 -2.121320 -8.000000)
    (-0.707107 -0.707107 -8.000000)
    (-20.000000 -20.000000 -8.000000)
    (-2.121320 -20.000000 -8.000000)
    (40.000000 -2.121320 4.000000)
    (2.121320 -2.121320 4.000000)
    (0.707107 -0.707107 4.000000)
    (40.000000 -20.000000 4.000000)
    (2.121320 -20.000000 4.000000)
    (0.000000 -20.000000 4.000000)
    (0.000000 -3.000000 4.000000)
    (0.000000 -1.000000 4.000000)
    (-20.000000 -2.121320 4.000000)
    (-2.121320 -2.121320 4.000000)
    (-0.707107 -0.707107 4.000000)
    (-20.000000 -20.000000 4.000000)
    (-2.121320 -20.000000 4.000000)
); 

blocks 
( 
//up
hex (5 4 9 10 24 23 28 29)   (10 5 20) simpleGrading (2 1 1) 
hex (0 1 4 5 19 20 23 24)  (10 5 20) simpleGrading (2 1 1) 
hex (1 2 3 4 20 21 22 23)  (25 5 20) simpleGrading (6 1 1) 
hex (4 3 6 7 23 22 25 26)  (25 15 20) simpleGrading (6 7 1) 
hex (9 4 7 8 28 23 26 27) (5 15 20) simpleGrading (1 7 1) 
hex (15 16 10 9 34 35 29 28) (10 5 20) simpleGrading (0.5 1 1) 
hex (12 11 16 15 31 30 35 34)  (10 5 20) simpleGrading (0.5 1 1) 
hex (13 12 15 14 32 31 34 33)  (15 5 20) simpleGrading (0.15 1 1) 
hex (14 15 18 17 33 34 37 36) (15 15 20) simpleGrading (0.15 7 1) 
hex (15 9 8 18 34 28 27 37) (5 15 20) simpleGrading (1 7 1) 
//dowm 
hex (40 45 44 39 53 58 57 52)   (5 10 20) simpleGrading (1 2 1) 
hex (0 40 39 1 19 53 52 20)  (5 10 20) simpleGrading (1 2 1) 
hex (1 39 38 2 20 52 51 21)  (5 25 20) simpleGrading (1 6 1) 
hex (39 42 41 38 52 55 54 51)  (15 25 20) simpleGrading (7 6 1) 
hex (44 43 42 39 57 56 55 52) (15 5 20) simpleGrading (7 1 1) 
hex (47 44 45 48 60 57 58 61) (5 10 20) simpleGrading (1 0.5 1) 
hex (12 47 48 11 31 60 61 30)  (5 10 20) simpleGrading (1 0.5 1) 
hex (13 46 47 12 32 59 60 31)  (5 15 20) simpleGrading (1 0.15 1) 
hex (46 49 50 47 59 62 63 60) (15 15 20) simpleGrading (7 0.15 1) 
hex (47 50 43 44 60 63 56 57) (15 5 20) simpleGrading (7 1 1) 
); 

edges 
( 
//up 
    arc 0 5 (0.939693 0.342020 -8.000000) 
    arc 5 10 (0.342020 0.939693 -8.000000) 
    arc 11 16 (-0.939693 0.342020 -8.000000) 
    arc 16 10 (-0.342020 0.939693 -8.000000) 
    arc 19 24 (0.939693 0.342020 4.000000) 
    arc 24 29 (0.342020 0.939693 4.000000) 
    arc 30 35 (-0.939693 0.342020 4.000000) 
    arc 35 29 (-0.342020 0.939693 4.000000) 
    arc 15 9 (-1.026060 2.819078 -8.000000) 
    arc 12 15 (-2.819078 1.026060 -8.000000) 
    arc 1 4 (2.819078 1.026060 -8.000000) 
    arc 4 9 (1.026060 2.819078 -8.000000) 
    arc 34 28 (-1.026060 2.819078 4.000000) 
    arc 31 34 (-2.819078 1.026060 4.000000) 
    arc 20 23 (2.819078 1.026060 4.000000) 
    arc 23 28 (1.026060 2.819078 4.000000) 
 //down 
    arc 0 40 (0.939693 -0.342020 -8.000000) 
    arc 40 45 (0.342020 -0.939693 -8.000000) 
    arc 11 48 (-0.939693 -0.342020 -8.000000) 
    arc 48 45 (-0.342020 -0.939693 -8.000000) 
    arc 19 53 (0.939693 -0.342020 4.000000) 
    arc 53 58 (0.342020 -0.939693 4.000000) 
    arc 30 61 (-0.939693 -0.342020 4.000000) 
    arc 61 58 (-0.342020 -0.939693 4.000000) 
    arc 47 44 (-1.026060 -2.819078 -8.000000) 
    arc 12 47 (-2.819078 -1.026060 -8.000000) 
    arc 1 39 (2.819078 -1.026060 -8.000000) 
    arc 39 44 (1.026060 -2.819078 -8.000000) 
    arc 60 57 (-1.026060 -2.819078 4.000000) 
    arc 31 60 (-2.819078 -1.026060 4.000000) 
    arc 20 52 (2.819078 -1.026060 4.000000) 
    arc 52 57 (1.026060 -2.819078 4.000000) 
); 

patches 
( 
patch outlet 
        ( 
            (2 3 22 21) 
            (3 6 25 22) 
            (38 2 21 51) 
            (41 38 51 54) 
        ) 

symmetryPlane sym1 
        ( 
            (7 8 27 26) 
            (6 7 26 25) 
            (8 18 37 27) 
            (18 17 36 37) 
        ) 

symmetryPlane sym2 
        ( 
            (43 42 55 56)  
            (42 41 54 55)  
            (50 43 56 63)  
            (49 50 63 62)  
        ) 

patch inlet 
        ( 
            (14 13 32 33) 
            (17 14 33 36) 
            (13 46 59 32)  
            (46 49 62 59)  
        ) 

wall cylinder 
        ( 
            (10 5 24 29) 
            (5 0 19 24) 
            (16 10 29 35) 
            (11 16 35 30) 
            (40 45 58 53)  
             (0 40 53 19)   
             (45 48 61 58)  
            (48 11 30 61)  
        ) 
patch bottom 
        ( 
           (5 10 9 4) 
        (0 5 4 1)  
        (1 4 3 2) 
        (4 7 6 3) 
        (9 8 7 4) 
        (16 15 9 10) 
        (11 12 15 16) 
        (12 13 14 15) 
        (14 17 18 15) 
        (15 18 8 9) 
        //down  
        (45 40 39 44)  
        (40 0 1 39)  
        (1 2 38 39) 
        (39 38 41 42) 
        (44 39 42 43) 
        (48 45 44 47) 
        (11 48 47 12) 
        (13 12 47 46) 
        (46 47 50 49) 
        (47 44 43 50) 
        ) 

patch atmosphere 
        ( 
     //up 
        (24 23 28 29)
        (20 23 24 19)
        (21 22 23 20)
        (22 25 26 23)
        (26 27 28 23)
        (28 34 35 29)
        (34 31 30 35)
        (33 32 31 34)
        (36 33 34 37)
        (37 34 28 27)
        //down
        (53 58 57 52)
        (19 53 52 20)
        (21 20 52 51)
        (51 52 55 54)
        (52 57 56 55)
        (58 61 60 57)
        (61 30 31 60)
        (31 32 59 60)
        (60 59 62 63)
        (57 60 63 56) 
        ) 

); 
 
mergePatchPairs 
( 
); 
 
// ************************************************************************* // 
